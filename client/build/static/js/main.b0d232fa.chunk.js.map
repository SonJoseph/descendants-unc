{"version":3,"sources":["components/Document.js","components/CreateRelationship.js","components/CreateNode.js","components/CreatePopup.js","screens/SelectTree.js","components/ViewDocument.js","components/Property.js","components/ViewNode.js","components/Alert.js","components/UpdateNode.js","components/Message.js","components/ScreenRegistry.js","screens/UpdateTree.js","App.js","serviceWorker.js","index.js"],"names":["Document","props","update","e","updateDocument","idx","target","name","value","delete","deleteDocument","TextField","label","onChange","this","defaultValue","initName","initLink","React","Component","CreateRelationship","setState","reln","updateRelnForm","checkSpouse","a","fetch","nodeid","response_spouse","json","hasSpouse","console","log","selectedIsRoot","state","FormControl","variant","className","error","helperText","InputLabel","Select","MenuItem","FormHelperText","selectedName","CreateNode","updateRootInfo","event","addDocument","documents","push","link","deleteLastDocument","splice","length","key","val","relnType","create","person","gender","birth","death","moreinfo","isUpdate","newRootWithReln","isRoot","url","JSON","stringify","response","myJson","spouse_id","selectedID","json_spouse","back","changeRoot","history","pathname","family","selectedJson","updateNode","Documents","i","Grid","container","spacing","direction","justify","alignItems","style","marginTop","maxHeight","overflowX","overflowY","item","Typography","color","marginLeft","margin","hasOwnProperty","xs","type","InputLabelProps","shrink","id","multiline","rows","fullWidth","width","ButtonGroup","size","aria-label","Button","onClick","close","withRouter","CreatePopup","trigger","position","modal","height","overflow","bind","SelectTree","getTreeRoots","tree_roots","updateTree","tree","Container","maxWidth","align","map","ViewDocument","ListItem","ListItemText","k","href","Property","isDocument","Display","ViewNode","selectedArr","charAt","toUpperCase","slice","textAlign","List","edit","add","Alert","UpdateNode","updateSelectedNode","submitUpdates","deleteNode","Message","message","ScreenRegistry","window","d3","UpdateTree","getTree","sendMsg","root_id","root_name","drawTree","socket","emit","session","svg","document","getElementById","lastChild","removeChild","treeData","dTree","init","refs","debug","callbacks","nodeClick","chooseNode","nodeHeightSeperation","nodeWidth","nodeMaxHeight","top","right","bottom","left","styles","node","linage","marriage","text","extra","getNode","display","arr","parse","replace","Object","entries","forEach","goHome","del","cookies","Cookies","location","protocol","ws_scheme","hostname","get","openSocket","on","data","Form","split","minSize","defaultSize","maxSize","marginBottom","ref","borderWidth","App","uuidv1","require","set","path","exact","component","Boolean","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b0d232fa.chunk.js","sourcesContent":["import React from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nclass Document extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        this.idx = this.props.idx\r\n    }\r\n\r\n    update = (e) => {\r\n        this.props.updateDocument(this.idx, e.target.name, e.target.value)\r\n    }\r\n\r\n    delete = () => {\r\n        this.props.deleteDocument(this.idx)\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div>\r\n                <TextField label=\"Document Name\" name='name' onChange={this.update} defaultValue={this.props.initName}/>\r\n                <TextField label=\"Document Link\" name='link' onChange={this.update} defaultValue={this.props.initLink}/>\r\n                {/* <Button onClick={this.delete}> Delete </Button> */}\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Document","import React from 'react'\r\n\r\nimport TextField from '@material-ui/core/TextField'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Select from '@material-ui/core/Select'\r\nimport Button from '@material-ui/core/Button'\r\nimport CreateNode from './CreateNode'\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nclass CreateRelationship extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        console.log('Is the selected node the root of the tree?: ' + this.props.selectedIsRoot)\r\n\r\n        this.state = {\r\n            reln : '',\r\n            hasSpouse: true\r\n        }\r\n\r\n        this.checkSpouse()\r\n    }\r\n\r\n    update = (e) => {\r\n        this.setState({ // Update the client\r\n            reln : e.target.value\r\n        })\r\n        this.props.updateRelnForm(e.target.value) // We have to send the updated state back to the parent\r\n    }\r\n\r\n    checkSpouse = async() => {\r\n      const response_spouse = await fetch('/api/getspouseid/nodeid=' + this.props.nodeid)\r\n      const json_spouse = await response_spouse.json()\r\n      if (json_spouse['data'] === 'none'){\r\n        this.setState({\r\n          hasSpouse : false\r\n        })\r\n      }\r\n    }\r\n\r\n    render(){\r\n\r\n        return (\r\n            <div>\r\n                    <FormControl variant=\"outlined\" className=\"formControl\" error={!this.state.reln}\r\n                    helperText={!this.state.reln ? 'Name Field Required' : ' '}>\r\n                      <InputLabel>Relationship</InputLabel>\r\n                    <Select\r\n                        name=\"relnType\"\r\n                        onChange={this.update}\r\n                        value={this.state.reln}\r\n                    >\r\n                        {!this.state.hasSpouse && <MenuItem value={'spouse'}>Spouse</MenuItem>}\r\n                        <MenuItem value={'parent'}>Child</MenuItem>\r\n                        { this.props.selectedIsRoot && <MenuItem value={'child'}>Parent</MenuItem>}\r\n                    </Select>\r\n                    <FormHelperText>What is this new person's relationship to {this.props.selectedName}? </FormHelperText>\r\n                  </FormControl>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default CreateRelationship\r\n","import React from 'react'\r\nimport { Route , withRouter} from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button'\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Select from '@material-ui/core/Select'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nimport Document from './Document'\r\nimport CreateRelationship from './CreateRelationship'\r\nimport '../css/CreateNode.css';\r\n\r\nclass CreateNode extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = { /* If we are updating a node, initialize the form to the existing fields */\r\n            name: this.props.isUpdate ? this.props.selectedJson['name'] : '',\r\n            gender: this.props.isUpdate ? this.props.selectedJson['gender'] : '',\r\n            birth: this.props.isUpdate ? this.props.selectedJson['birth'] : '',\r\n            death: this.props.isUpdate ? this.props.selectedJson['death'] : '',\r\n            moreinfo: this.props.isUpdate ? this.props.selectedJson['moreinfo'] : '',\r\n            isRoot: this.props.isRoot,\r\n            hasSpouse: false,\r\n            documents: this.props.isUpdate ? this.props.selectedJson['documents'] : [\r\n\r\n            ],\r\n\r\n            relnType:''\r\n        }\r\n    }\r\n\r\n    updateRootInfo = (event) => {\r\n        this.setState({\r\n              [event.target.name]: event.target.value\r\n        });\r\n     }\r\n\r\n     addDocument = () => {\r\n       this.state.documents.push({\r\n           name : '',\r\n           link :''\r\n       })\r\n       this.setState({\r\n           documents : this.state.documents\r\n       })\r\n     }\r\n\r\n     deleteLastDocument = () => {\r\n        this.state.documents.splice(this.state.documents.length-1, 1);\r\n        this.setState({\r\n            documents : this.state.documents\r\n        })\r\n     }\r\n\r\n     updateDocument = (idx, key, val) => {\r\n        this.state.documents[idx][key] = val\r\n     }\r\n\r\n     updateRelnForm = (val) =>{\r\n        this.state.relnType = val\r\n     }\r\n\r\n    create = async() => {\r\n        if(!this.state.name || !this.state.relnType){\r\n          return\r\n        }\r\n        let person = {\r\n            name: this.state.name,\r\n            gender: this.state.gender,\r\n            birth: this.state.birth,\r\n            death: this.state.death,\r\n            documents: this.state.documents,\r\n            moreinfo: this.state.moreinfo\r\n        }\r\n        if(!this.props.isUpdate){\r\n          let newRootWithReln = this.state.relnType === 'child';\r\n            if(this.state.isRoot || newRootWithReln){\r\n              /*\r\n                We are creating a new tree from scratch\r\n                  OR\r\n                We are adding a new root whose child is the selectedID\r\n              */\r\n                person['root'] = 1\r\n            }\r\n            let url = '/api/createnode/person='+JSON.stringify(person)\r\n            let response = await fetch(url)\r\n            let myJson = await response.json()\r\n\r\n            if(!this.state.isRoot){\r\n                /*\r\n                    Create the specified relationship to the newly created node\r\n                */\r\n                let spouse_id = ''\r\n                if(!newRootWithReln){\r\n                  const response_spouse = await fetch('/api/getspouseid/nodeid=' + this.props.selectedID)\r\n                  const json_spouse = await response_spouse.json()\r\n                  spouse_id = json_spouse['spouseId']\r\n\r\n\r\n\r\n                  url = '/api/createrelationship/newId='+myJson['id']+'&relnId='+this.props.selectedID+'&relnType='+this.state.relnType+'&spouseId='+spouse_id\r\n                  const response = await fetch(url)\r\n                  let createRelnJson = await response.json()\r\n\r\n                  this.props.back(false, myJson['id'])\r\n\r\n                  return\r\n                }else{\r\n                  // Make the new node the parent of the selected (in this case, that is the old root node)\r\n                  url = '/api/createrelationship/newId='+this.props.selectedID+'&relnId='+myJson['id']+'&relnType=parent&spouseId='+spouse_id\r\n\r\n                  const response = await fetch(url)\r\n                  let createRelnJson = await response.json()\r\n                  this.props.changeRoot(myJson['id'])\r\n                }\r\n            }else{\r\n              this.props.history.push({\r\n                pathname: '/update',\r\n                state: { family: myJson }\r\n              })\r\n            }\r\n        }else{\r\n            person['id'] = this.props.selectedJson['id']\r\n            this.props.updateNode(person)\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        const Documents = []\r\n\r\n        for(let i=0; i<this.state.documents.length; i++){\r\n            console.log(this.state.documents[i].name + \" : \" + this.state.documents[i].link)\r\n            Documents.push(<Document\r\n                idx = {i}\r\n                initName = {this.state.documents[i].name}\r\n                initLink = {this.state.documents[i].link}\r\n                updateDocument = {this.updateDocument}\r\n                // deleteDocument = {this.deleteDocument}\r\n            />)\r\n        }\r\n\r\n        return(\r\n            <div>\r\n\r\n                <Grid container spacing={2} direction=\"column\" justify=\"center\" alignItems=\"center\" style={{marginTop: '10px', maxHeight: '100%', overflowX: 'hidden', overflowY: 'auto'}}>\r\n                  <Grid item>\r\n                  {this.props.isUpdate && <Typography variant='h4' style={{color: \"#4253B8\", marginLeft: '5px'}}>Editing {this.state.name}</Typography>}\r\n                  {!this.props.isUpdate && !this.props.isRoot && <Typography variant='h4' style={{color: \"#4253B8\", marginLeft: '5px'}}>Adding Relative to {this.props.selectedJson['name']}</Typography>}\r\n                  </Grid>\r\n\r\n                  <Grid item style = {{margin: 8}}>\r\n                        {\r\n                            !this.state.isRoot && !this.props.isUpdate && <CreateRelationship\r\n                            updateRelnForm = {this.updateRelnForm}\r\n                            selectedName = {this.props.selectedJson['name']}\r\n                            selectedIsRoot = {\r\n                              this.props.selectedJson.hasOwnProperty('root') ? true : false\r\n                            } // For adding parent to root\r\n                            name = {this.state.name}\r\n                            nodeid = {this.props.selectedID}\r\n                        />\r\n                        }\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Grid container spacing={2} direction=\"row\">\r\n                      <Grid item>\r\n                        <TextField label=\"Name\" name='name' variant=\"outlined\" style={{marginTop: 8}} onChange={this.updateRootInfo}  defaultValue={this.state.name} error={this.state.name === \"\"}\r\n                        helperText={this.state.name === \"\" ? 'Name Field Required' : ' '} />\r\n                      </Grid>\r\n\r\n                      <Grid item>\r\n                        <FormControl variant=\"outlined\" className=\"formControl\">\r\n                          <InputLabel>Gender</InputLabel>\r\n                            <Select\r\n                                name=\"gender\"\r\n                                onChange={this.updateRootInfo}\r\n                                value={this.state.gender}\r\n                                defaultValue={this.state.gender}\r\n                                style={{marginTop: 8}}\r\n                            >\r\n                                <MenuItem value={'female'}>Female</MenuItem>\r\n                                <MenuItem value={'male'}>Male</MenuItem>\r\n                                <MenuItem value={'non-binary'}>NonBinary</MenuItem>\r\n                                <MenuItem value={'unknown'}>Unknown</MenuItem>\r\n                            </Select>\r\n                            <FormHelperText>Please select a gender here.</FormHelperText>\r\n                          </FormControl>\r\n                        </Grid>\r\n                      </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <Grid container spacing={2} direction=\"row\">\r\n                      <Grid item>\r\n                        <TextField label=\"Birth Date\" name='birth' type=\"date\" variant=\"outlined\" InputLabelProps={{shrink: true,}} onChange={this.updateRootInfo} defaultValue={this.state.birth}/>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <TextField label=\"Death Date\" name='death' type=\"date\" variant=\"outlined\" InputLabelProps={{shrink: true,}} onChange={this.updateRootInfo} defaultValue={this.state.death}/>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <TextField id=\"outlined-multiline-static\" name='moreinfo' label=\"Add more information here...\" multiline rows=\"4\"\r\n                    variant=\"outlined\" style={{ margin: 8 }} fullWidth onChange={this.updateRootInfo} defaultValue={this.state.moreinfo} style={{width: 400}}/>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <Grid container direction=\"column\" alignItems=\"center\">\r\n                      <Grid item>\r\n                        <h3>Add your documents (if any) here:</h3>\r\n                      </Grid>\r\n\r\n                      <Grid item>\r\n                        {Documents}\r\n                      </Grid>\r\n\r\n                      <Grid item style={{ margin: 8 }}>\r\n                        <ButtonGroup size=\"small\" aria-label=\"small outlined button group\" color=\"primary\">\r\n                          <Button onClick={this.addDocument} variant=\"contained\">Add New Doc</Button>\r\n                          <Button onClick={this.deleteLastDocument}> Delete Last Doc </Button>\r\n                          </ButtonGroup>\r\n                      </Grid>\r\n\r\n\r\n\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n\r\n                <Grid item>\r\n                  <Button onClick={this.create} variant=\"contained\" color=\"secondary\" size=\"large\" label=\"Finish\"  style={{ margin: 8 }}>\r\n                      {this.props.isUpdate ? 'Update' : 'Create'}\r\n                  </Button>\r\n                  {\r\n                      !this.state.isRoot &&\r\n                      <Button onClick={this.props.back} variant=\"outlined\" color=\"secondary\" size=\"large\" label=\"Finish\"  style={{ margin: 8 }}> Cancel </Button>\r\n                  }\r\n                  {\r\n                      this.state.isRoot &&\r\n                      <Button onClick={this.props.close} variant=\"outlined\" color=\"secondary\" size=\"large\" label=\"Finish\"  style={{ margin: 8 }}> Cancel </Button>\r\n                  }\r\n\r\n                </Grid>\r\n                </Grid>\r\n          </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(CreateNode);\r\n","import React from \"react\";\r\nimport Popup from \"reactjs-popup\";\r\nimport Button from '@material-ui/core/Button'\r\nimport CreateNode from '../components/CreateNode'\r\nimport { Typography } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nclass CreatePopup extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n          isRoot : true\r\n        }\r\n    }\r\n\r\n    render(){\r\n      return(\r\n        <Popup trigger={<Button color=\"secondary\" variant=\"contained\" > Add New Tree </Button>} position=\"right center\" modal>\r\n          {close => (\r\n              <div  style={{height: '650px', overflow: 'scroll'}}>\r\n                <Typography variant='h4'> Add your first person to the family tree! </Typography>\r\n                <Typography variant='body1'>  Your family tree will be identifed by this person. You can change this later. </Typography>\r\n                <CreateNode {...this.state}\r\n                  close={close.bind(this)}\r\n                  />\r\n              </div>\r\n          )}\r\n        </Popup>\r\n      )\r\n    }\r\n\r\n}\r\nexport default CreatePopup\r\n","import React from 'react'\r\nimport { List, ListItem, ListItemText } from '@material-ui/core'\r\nimport Button from '@material-ui/core/Button'\r\nimport SplitPane from 'react-split-pane'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport CreateNode from '../components/CreateNode'\r\nimport CreatePopup from '../components/CreatePopup'\r\nimport { Typography } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nclass SelectTree extends React.Component {\r\n    /*\r\n        Load the client with a list of the available family trees.\r\n    */\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            tree_roots : [],\r\n        }\r\n        this.name = this.props.selectedJson\r\n    }\r\n\r\n    getTreeRoots = async () => {\r\n        const response = await fetch('/api/gettrees')\r\n        const myJson = await response.json()\r\n        this.setState({tree_roots : myJson.tree_roots})\r\n        console.log(this.tree_roots)\r\n    }\r\n\r\n    updateTree = (tree) => {\r\n        console.log(tree)\r\n        this.props.history.push({\r\n            pathname: '/update',\r\n            state: { family: tree }\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getTreeRoots()\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n          <div>\r\n            <Grid container spacing={4} justify= 'center' direction=\"column\" style={{margin:8}}>\r\n              <Grid item >\r\n                <Container maxWidth=\"md\">\r\n                  <Typography variant='h2' align='center'> The Descendants Project </Typography>\r\n                </Container>\r\n              </Grid>\r\n              <Grid item >\r\n                <Container maxWidth=\"sm\">\r\n                  <Grid container spacing={4} justify= 'center'>\r\n                    <Grid item>\r\n                      <Typography variant='h5'> Click to view an existing tree.</Typography>\r\n                    </Grid>\r\n                    <Grid item container spacing={2} justify=\"center\" alignItems=\"center\" style={{height:400, overflow: 'auto'}}>\r\n                        {\r\n                            this.state.tree_roots.map(\r\n                                (item) => <Grid item> <Button color=\"secondary\" onClick={() => this.updateTree(item)}  variant=\"outlined\" color=\"primary\" > {item.name} </Button> </Grid>\r\n                            )\r\n                        }\r\n                        {/* <ListItem style={{ width: '100%', marginTop: '30px' }}><Button style={{ width: '100%' }} variant=\"outlined\" color=\"primary\" onClick={() => this.props.history.push('/createClass')}> Add a new class </Button></ListItem> */}\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <CreatePopup  />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Container>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default SelectTree\r\n","/*\r\n    Using this to display documents and make them clickable\r\n*/\r\nimport React from 'react'\r\nimport { List, ListItem, ListItemText } from '@material-ui/core'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nclass ViewDocument extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <ListItem>\r\n                <ListItemText>\r\n                    {this.props.k + \": \"} <a href={this.props.val}> {this.props.val} </a>\r\n                </ListItemText>\r\n            </ListItem>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewDocument\r\n","/*\r\n    Using this to display a field of a node\r\n*/\r\nimport React from 'react'\r\nimport { List, ListItem, ListItemText } from '@material-ui/core'\r\nimport ViewDocument from '../components/ViewDocument'\r\n\r\n\r\nclass Property extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            isDocument : this.props.k === 'documents'\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let Display = this.props.k + ': ' + this.props.val // this.props.val is an array\r\n        if(this.props.k === 'documents'){\r\n\r\n            Display = []\r\n            for(let i=0; i<this.props.val.length; i++){\r\n                let key = this.props.val[i]['name']\r\n                let val = this.props.val[i]['link']\r\n\r\n                Display.push(\r\n                    <ViewDocument\r\n                        k = {key}\r\n                        val = {val}\r\n                    />\r\n                )\r\n            }\r\n        }\r\n        return(\r\n            <ListItem>\r\n                <ListItemText>\r\n                    {\r\n                        this.state.isDocument && <div> Documents </div>\r\n                    }\r\n                    {\r\n                        Display\r\n                    }\r\n                </ListItemText>\r\n            </ListItem>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Property\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport { List, ListItem, ListItemText } from '@material-ui/core'\r\nimport Property from '../components/Property'\r\nimport { Typography } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nclass ViewNode extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render(){\r\n        const Display = []\r\n\r\n        for(let i=0; i<this.props.selectedArr.length; i++){\r\n          let key = this.props.selectedArr[i][0]\r\n            if (key != 'name'){\r\n              switch(key){\r\n                case \"birth\": case \"death\": case \"gender\":\r\n                  key = key.charAt(0).toUpperCase() + key.slice(1);\r\n                  break;\r\n                case \"moreinfo\":\r\n                  key=\"Notes\"\r\n              }\r\n\r\n              let val = this.props.selectedArr[i][1]\r\n\r\n              Display.push(\r\n                  <Property\r\n                      k = {key}\r\n                      val = {val}\r\n                  />\r\n                )\r\n            }\r\n\r\n        }\r\n\r\n        return(\r\n            <Grid direction=\"column\" container style = {{margin:15}}>\r\n                <Grid item>\r\n                  <Typography variant='h4' style={{color: \"#4253B8\", textAlign: \"center\", marginTop: \"5px\"}}>Viewing {this.props.selectedJson['name']}</Typography>\r\n                  <List id=\"viewNodeInfo\">\r\n                      {\r\n                          Display\r\n                      }\r\n                  </List>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                  <Grid item><Button onClick={this.props.edit} variant=\"contained\" color=\"primary\" size=\"medium\" style={{ margin: 8 }}> Edit </Button></Grid>\r\n                  <Grid item><Button onClick={this.props.add} variant=\"outlined\" color=\"primary\" size=\"medium\" style={{ margin: 8 }}> Add Relative to {this.props.selectedJson['name']}</Button></Grid>\r\n                  </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewNode\r\n","import React from \"react\";\r\nimport Popup from \"reactjs-popup\";\r\nimport Button from '@material-ui/core/Button'\r\nimport { Typography } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nclass Alert extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render(){\r\n      return(\r\n        <Popup trigger={<Grid container justify=\"center\" alignItems=\"center\"><Grid item><Button variant=\"contained\" size=\"large\" style={{margin: 8}}> Delete This Person </Button></Grid></Grid>} position=\"right center\" modal>\r\n          {close => (\r\n              <Grid container style = {{margin: '15px'}}>\r\n              <Grid item>\r\n                <Typography variant=\"h6\" style={{color: \"#c62828\", margin: '15px'}}> Are you sure you want to delete this person from the tree? </Typography>\r\n                <Typography variant=\"body2\" style={{margin: '15px'}}> This will delete any people directly below this person in the tree, their spouse, and the data for all of those people.\r\n                  </Typography>\r\n              </Grid>\r\n                <Grid item className=\"actions\">\r\n                  <Button className=\"button\" onClick={() => { close(); }} style = {{margin: '8px'}}> Cancel </Button>\r\n                  <Button className=\"button\" variant=\"outlined\" color=\"primary\" onClick={() => { this.props.delete() }} style = {{margin: '8px'}}> Confirm </Button>\r\n                </Grid>\r\n              </Grid>\r\n          )}\r\n        </Popup>\r\n      )\r\n    }\r\n\r\n}\r\nexport default Alert\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Alert from '../components/Alert.js'\r\nimport { Route , withRouter} from 'react-router-dom';\r\nimport CreateNode from '../components/CreateNode'\r\n\r\nclass UpdateNode extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    updateSelectedNode = (event) => {\r\n        this.json[event.target.name] = event.target.value\r\n     }\r\n\r\n    submitUpdates = async(json) => {\r\n        let url = '/api/updatenode/person='+JSON.stringify(json);\r\n        const response = await fetch(url)\r\n        const myJson = await response.json()\r\n        this.props.back()\r\n    }\r\n\r\n    deleteNode = async () => {\r\n      console.log(this.props.selectedJson['root'])\r\n      let url = '/api/deletenode/id='+this.props.selectedID;\r\n      const response = await fetch(url)\r\n      const myJson = await response.json()\r\n      if(this.props.selectedJson['root'] === 1){\r\n        this.props.history.push({\r\n            pathname: '/',\r\n        })\r\n      } else {\r\n        this.props.back(true)\r\n      }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <CreateNode\r\n                    selectedJson = {this.props.selectedJson}\r\n                    isRoot = {false}\r\n                    isUpdate = {true}\r\n                    updateNode = {this.submitUpdates}\r\n                    back = {this.props.back}\r\n                />\r\n                <Alert {...this.state}\r\n                  delete={this.deleteNode.bind(this)} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(UpdateNode)\r\n","import React from 'react'\r\nimport { Typography } from '@material-ui/core';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nclass Message extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n              <Grid style = {{margin:15}}>\r\n                <Typography variant=\"h4\" style={{color: \"#4253B8\", textAlign: \"center\", marginTop: \"5px\"}}>\r\n                    {this.props.message}\r\n                </Typography>\r\n              </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Message\r\n","import ViewNode from '../components/ViewNode.js'\r\nimport UpdateNode from '../components/UpdateNode.js'\r\nimport CreateNode from '../components/CreateNode.js'\r\nimport Message from '../components/Message.js'\r\n\r\nconst ScreenRegistry = {\r\n    'view' : ViewNode,\r\n    'update' : UpdateNode,\r\n    'add' : CreateNode,\r\n    'home' : Message\r\n}\r\n\r\nexport default ScreenRegistry","import React from 'react'\r\n\r\nimport ScreenRegistry from '../components/ScreenRegistry'\r\nimport Container from '@material-ui/core/Container'\r\nimport openSocket from 'socket.io-client'\r\nimport Cookies from 'universal-cookie'\r\nimport { Typography } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Divider } from '@material-ui/core';\r\n// import Home from '@material-ui/icons/Home';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button'\r\n\r\n\r\nimport * as d3 from \"d3\"\r\nimport _ from 'lodash'\r\nimport dTree from 'd3-dtree'\r\nimport '../css/UpdateTree.css'\r\nimport SplitPane from 'react-split-pane'\r\nwindow.d3 = d3;\r\n\r\nclass UpdateTree extends React.Component {\r\n\r\n\r\n    constructor(props){\r\n        super(props)\r\n        const cookies = new Cookies()\r\n\r\n        if(window.location.protocol === \"https:\") {\r\n            var ws_scheme = \"wss://\";\r\n        } else {\r\n            var ws_scheme = \"ws://\"\r\n        };\r\n\r\n        console.log(ws_scheme + window.location.hostname)\r\n\r\n\r\n        this.state = {\r\n            session : cookies.get('SESSION_ID'),\r\n            socket: openSocket(ws_scheme + window.location.hostname),// + ':5000'),\r\n            display : 'home',\r\n\r\n            root_name : props.location.state.family.name,\r\n            root_id : props.location.state.family.id,\r\n\r\n            tree : [],\r\n\r\n            selectedID : \"\",\r\n            selectedArr : [],\r\n            selectedJson : {},\r\n        }\r\n\r\n        this.state.socket.on('RefreshTree', data =>{\r\n            if(data['tree_id'] === this.state.root_id && this.state.session !== data['session']){\r\n                console.log('Another client is working on this tree')\r\n                this.getTree(false) // Don't send message to server or-else infinite loop!\r\n            }\r\n        })\r\n    }\r\n\r\n    getTree = async (sendMsg=true) => { // We currently can't change the root of the tree\r\n        const response = await fetch('/api/gettree/id='+ this.state.root_id)\r\n        const myJson = await response.json()\r\n\r\n        console.log(myJson)\r\n        \r\n        this.setState({\r\n            root_name : myJson[0]['name'], // In case the name of the root changes\r\n            tree : myJson\r\n        })\r\n        this.drawTree()\r\n\r\n        if(sendMsg == true){\r\n            // I made a change to this tree, all users looking at this tree (besides myself), force refresh!\r\n            this.state.socket.emit('FetchTree', {\r\n                'session' : this.state.session,\r\n                'tree_id' : this.state.root_id\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getTree()\r\n    }\r\n\r\n\r\n   drawTree = () => {\r\n     // clear the canvas\r\n    var svg = document.getElementById(\"graph\")\r\n    while (svg.lastChild) {\r\n      svg.removeChild(svg.lastChild);\r\n    }\r\n\r\n     var treeData = this.state.tree\r\n          dTree.init(treeData,\r\n            {\r\n                target: this.refs.tree,\r\n                debug: true,\r\n                height: 800,\r\n                width: 1200,\r\n                callbacks: {\r\n                    nodeClick: this.chooseNode,\r\n                    /* Set the vertical space between nodes */\r\n                    nodeHeightSeperation : function(nodeWidth, nodeMaxHeight){\r\n                        return 30;\r\n                    }\r\n\r\n                },\r\n                margin: {\r\n                    top: 0,\r\n                    right: 0,\r\n                    bottom: 0,\r\n                    left: 0\r\n                },\r\n                nodeWidth: 100,\r\n                styles: {\r\n                    node: 'node',\r\n                    linage: 'linage',\r\n                    marriage: 'marriage',\r\n                    text: 'nodeText'\r\n                }\r\n            }\r\n        );\r\n   }\r\n\r\n    chooseNode = (name, extra, id) => {\r\n        this.getNode(extra)\r\n        this.setState({\r\n            display : 'view'\r\n        })\r\n   }\r\n\r\n   getNode = async (id) => {\r\n        const response = await fetch('/api/getnode/id=' + id)\r\n        const json = await response.json()\r\n\r\n        let arr = []\r\n\r\n        json['documents'] = JSON.parse(json['documents'].replace(/\\n|\\r/g,'').replace(/'/g, '\"'))\r\n\r\n        Object.entries(json).forEach(([key,value])=>{\r\n            if(key !== \"id\" && key !== \"root\" && key !== \"depth\"){\r\n                // Don't display these fields. If they're not displayed, then they also can't be edited\r\n                arr.push([key, value])\r\n            }\r\n        })\r\n\r\n        this.setState({\r\n            selectedArr : arr, // we display this\r\n            selectedID : id,\r\n            selectedJson : json, // we use this to update fields\r\n        })\r\n    }\r\n\r\n    changeRoot = (id) => {\r\n        this.state.root_id = id // set a new root id\r\n        this.back(false, id)\r\n    }\r\n\r\n    goHome = () => {\r\n      this.props.history.push({\r\n          pathname: '/',\r\n      })\r\n    }\r\n\r\n   edit = () => {\r\n       this.setState({\r\n           display : 'update'\r\n       })\r\n   }\r\n\r\n   back = (del=false, id=this.state.selectedID) => {\r\n       console.log(del)\r\n       if(del == true){\r\n            this.setState({\r\n                selectedArr : [],\r\n                selectedID : '',\r\n                selectedJson : {},\r\n                display : 'home'\r\n            })\r\n        }else{\r\n            this.getNode(id) // view the specified node\r\n            this.setState({\r\n                display : 'view'\r\n            })\r\n        }\r\n        this.getTree() // refresh node\r\n   }\r\n\r\n   add = () => {\r\n       this.setState({\r\n           display : 'add'\r\n       })\r\n   }\r\n\r\n    render() {\r\n\r\n        const Form = ScreenRegistry[this.state.display]\r\n        const props = {}\r\n\r\n        return (\r\n\r\n                <SplitPane split=\"vertical\" minSize={450} defaultSize={450} maxSize={450}>\r\n\r\n                            <div style={{maxHeight: '100%', overflowX: 'hidden', overflowY: 'auto'}}>\r\n                                {<Form\r\n                                    {...this.state} // parent's state can be accesed in child via this.props...\r\n                                    isRoot={false}\r\n                                    edit={this.edit.bind(this)}\r\n                                    back={this.back.bind(this)}\r\n                                    add={this.add.bind(this)}\r\n\r\n                                    changeRoot={this.changeRoot.bind(this)}\r\n                                    message={'Click a person to view their information!'}\r\n                                />}\r\n                            </div>\r\n                            <Grid container spacing={3} justify= 'center' direction=\"column\" >\r\n                                <Grid item>\r\n                                  <Container maxWidth='lg' style={{marginTop: '10px', marginBottom: '10px'}}>\r\n                                    <Grid container spacing={3} justify= 'space-between' alignItems='center' direction=\"row\" >\r\n                                      <Grid item>\r\n                                        <Typography variant='h2'style={{textAlign: \"center\", marginTop: '10px'}}> {this.state.root_name}'s Family </Typography>\r\n                                      </Grid>\r\n                                      <Grid item>\r\n                                        <Button color=\"secondary\" onClick={this.goHome} variant=\"outlined\" color=\"secondary\" size=\"large\" label=\"Finish\"> Home\r\n                                        </Button>\r\n                                      </Grid>\r\n                                  </Grid>\r\n\r\n                                  </Container >\r\n                                </Grid >\r\n                                <Container maxWidth='lg'>\r\n                                  <div>\r\n                                    <svg ref=\"tree\" id = \"graph\" width=\"100%\" height=\"560\" style={{ borderWidth: \"0px\"}}></svg>\r\n                                  </div>\r\n                                </Container >\r\n                            </Grid>\r\n                </SplitPane>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default UpdateTree\r\n","import Button from '@material-ui/core/Button'\r\nimport React from 'react'\r\nimport { Typography } from '@material-ui/core';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n/* Screens */\r\nimport SelectTree from './screens/SelectTree'\r\nimport UpdateTree from './screens/UpdateTree'\r\n/* Routing */\r\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom'\r\n\r\nimport Cookies from 'universal-cookie'\r\n\r\nfunction App() {\r\n    const cookies = new Cookies();\r\n    const uuidv1 = require('uuid/v1')\r\n    cookies.set('SESSION_ID', uuidv1(), { path: '/' });\r\n\r\n    return  <div>\r\n      <Router>\r\n          <div>\r\n              <Route exact path=\"/\" component={SelectTree} />\r\n              <Route path=\"/update\" component={UpdateTree} />\r\n          </div>\r\n      </Router>\r\n\r\n\t</div>\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n/* Screens */\r\nimport App from './App'\r\nimport SelectTree from './screens/SelectTree'\r\nimport UpdateTree from './screens/UpdateTree'\r\n/* Routing */\r\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom'\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}